function ssh_host_available {
    init_doc
    init_desc \
        "Check whether a host is available via ssh"
    init_arg "str" "host" "The ssh host to check" "localhost"
    init_arg "num" "port" "The ssh port to check" "12345"
    init_arg "num" "timeout" "The timout in seconds" "2"

    need_help $@ && return $?

    eval "$(parse_arguments "$@")"

    if [[ "${host}" == "localhost" ||
        "${host}" == "" ]]; then
        local host="$(read_non_blocking "$@")"
    fi

    if [[ "${host}" == "" ]]; then
        err "Argument 'host' may not be empty"
    fi
    if [[ "${port}" == "" ]]; then
        err "Argument 'port' may not be empty"
    fi

    output="$(ssh \
        -o PubkeyAuthentication=no \
        -o PasswordAuthentication=no \
        -o KbdInteractiveAuthentication=no \
        -o ChallengeResponseAuthentication=no \
        -o ConnectTimeout=${timeout} \
        -p "${port}" \
        "${host}" \
        2>&1)"

    if (printf "${output}" | grep -Eiq "Host key .* has changed"); then
        echo "Key for host >${hostname}< has changed. Removing that host!" >&2
        # printf -- "ssh -G "$hostname"" >&2
        ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[${host}]:${port}"
    fi

    printf "${output}" |
        grep -Eiq "(Permission denied|Host key .* has changed)" > \
            /dev/null 2>&1

    retval=$?

    return $retval
}
